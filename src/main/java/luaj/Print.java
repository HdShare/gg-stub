package luaj;

import java.io.PrintStream;

import luaj.compiler.Constants;

public class Print extends Lua {
    private static final byte BRANCH = 2;
    private static final int ERR_OP_LOADKX_NOT_OP_EXTRAARG = 2147483646;
    private static final int ERR_OP_LOADKX_NO_NEXT = Integer.MAX_VALUE;
    public static final String HEADER = "; --[=========[ Lua assembler file generated by GameGuardian ";
    private static final byte NEED_LABEL = 32;
    private static final byte NONE = 0;
    private static final int NOP;
    public static final String[] OPNAMES;
    private static final String STRING_FOR_NULL = "null";
    private static final byte TARGET = 64;
    private static final byte UNUSED = 3;
    private static final byte USED = 1;
    private static final byte USED_MASK = 31;
    public static PrintStream ps = System.out;

    static {
        String[] strArr = new String[48];
        strArr[0] = "MOVE";
        strArr[1] = "LOADK";
        strArr[2] = "LOADKX";
        strArr[3] = "LOADBOOL";
        strArr[4] = "LOADNIL";
        strArr[5] = "GETUPVAL";
        strArr[6] = "GETTABUP";
        strArr[7] = "GETTABLE";
        strArr[8] = "SETTABUP";
        strArr[9] = "SETUPVAL";
        strArr[10] = "SETTABLE";
        strArr[11] = "NEWTABLE";
        strArr[12] = "SELF";
        strArr[13] = "ADD";
        strArr[14] = "SUB";
        strArr[15] = "MUL";
        strArr[16] = "DIV";
        strArr[17] = "MOD";
        strArr[18] = "POW";
        strArr[19] = "UNM";
        strArr[20] = "NOT";
        strArr[21] = "LEN";
        strArr[22] = "CONCAT";
        strArr[23] = "JMP";
        strArr[24] = "EQ";
        strArr[25] = "LT";
        strArr[26] = "LE";
        strArr[27] = "TEST";
        strArr[28] = "TESTSET";
        strArr[29] = "CALL";
        strArr[30] = "TAILCALL";
        strArr[31] = "RETURN";
        strArr[32] = "FORLOOP";
        strArr[33] = "FORPREP";
        strArr[34] = "TFORCALL";
        strArr[35] = "TFORLOOP";
        strArr[36] = "SETLIST";
        strArr[37] = "CLOSURE";
        strArr[38] = "VARARG";
        strArr[39] = "EXTRAARG";
        strArr[40] = "IDIV";
        strArr[41] = "BNOT";
        strArr[42] = "BAND";
        strArr[43] = "BOR";
        strArr[44] = "BXOR";
        strArr[45] = "SHL";
        strArr[46] = "SHR";
        OPNAMES = strArr;
        NOP = Constants.CREATE_ABC(31, 0, 1, 0);
    }

    public static void printString(StringBuilder sb, LuaString s) {
        throw new RuntimeException("Stub!");
    }

    static void printValue(StringBuilder sb, LuaValue v) {
        throw new RuntimeException("Stub!");
    }

    static void printConstant(StringBuilder sb, Prototype f, int i) {
        throw new RuntimeException("Stub!");
    }

    public static void printCode(Prototype f, String level, PrintState state) {
        throw new RuntimeException("Stub!");
    }

    public static void describe(StringBuilder sb, int pc, int i) {
        throw new RuntimeException("Stub!");
    }

    public static byte[] fix(Prototype f, int[] fixed) {
        throw new RuntimeException("Stub!");
    }

    private static boolean fix(byte[] used, Prototype f, int[] code, int[] fixed) {
        throw new RuntimeException("Stub!");
    }

    public static int printOpCode(Prototype f, int pc) {
        throw new RuntimeException("Stub!");
    }

    private static StringBuilder addComm(StringBuilder comm, String str) {
        throw new RuntimeException("Stub!");
    }

    private static StringBuilder checkVar(StringBuilder comm, int max, int var) {
        throw new RuntimeException("Stub!");
    }

    private static StringBuilder checkUp(StringBuilder comm, int upmax, int var) {
        throw new RuntimeException("Stub!");
    }

    public static int printOpCode(StringBuilder sb, Prototype f, int pc, PrintState state) {
        throw new RuntimeException("Stub!");
    }

    private static int getLine(Prototype f, int pc) {
        throw new RuntimeException("Stub!");
    }

    static void printHeader(Prototype f, String level) {
        throw new RuntimeException("Stub!");
    }

    static void printUpValues(Prototype f, String level) {
        throw new RuntimeException("Stub!");
    }

    public static void print(Prototype prototype) {
        throw new RuntimeException("Stub!");
    }

    public static void saveTail(LuaClosure func, String outFile) {
        throw new RuntimeException("Stub!");
    }

    public static class PrintState {
        String level;
        byte[] used;
        int func = 0;
        int line = -1;

        PrintState() {
            throw new RuntimeException("Stub!");
        }
    }

    public static void printFunction(Prototype prototype, String level, PrintState state) {
        throw new RuntimeException("Stub!");
    }

    private static void format(String s, int maxcols) {
        throw new RuntimeException("Stub!");
    }

    public static void printState(LuaClosure cl, int pc, LuaValue[] stack, int top, Varargs varargs) {
        throw new RuntimeException("Stub!");
    }

    public static void printStack(LuaValue[] stack, int top, Varargs varargs) {
        throw new RuntimeException("Stub!");
    }
}